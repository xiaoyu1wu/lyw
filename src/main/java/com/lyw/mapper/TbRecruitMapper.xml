<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lyw.mapper.TbRecruitMapper" >
  <resultMap id="BaseResultMap" type="com.lyw.domain.TbRecruit" >
    <id column="recr_id" property="recrId" jdbcType="INTEGER" />
    <result column="comp_name" property="compName" jdbcType="VARCHAR" />
    <result column="comp_id" property="compId" jdbcType="INTEGER" />
    <result column="recr_job" property="recrJob" jdbcType="VARCHAR" />
    <result column="recr_place" property="recrPlace" jdbcType="VARCHAR" />
    <result column="recr_salary" property="recrSalary" jdbcType="VARCHAR" />
    <result column="recr_degree" property="recrDegree" jdbcType="VARCHAR" />
    <result column="recr_duty" property="recrDuty" jdbcType="VARCHAR" />
    <result column="recr_demand" property="recrDemand" jdbcType="VARCHAR" />
    <result column="recr_date" property="recrDate" jdbcType="TIMESTAMP" />
    <result column="recr_state" property="recrState" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    recr_id, comp_name, comp_id, recr_job, recr_place, recr_salary, recr_degree, recr_duty, 
    recr_demand, recr_date, recr_state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lyw.domain.TbRecruitExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_recruit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_recruit
    where recr_id = #{recrId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_recruit
    where recr_id = #{recrId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lyw.domain.TbRecruitExample" >
    delete from tb_recruit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lyw.domain.TbRecruit" >
    insert into tb_recruit (recr_id, comp_name, comp_id, 
      recr_job, recr_place, recr_salary, 
      recr_degree, recr_duty, recr_demand, 
      recr_date, recr_state)
    values (#{recrId,jdbcType=INTEGER}, #{compName,jdbcType=VARCHAR}, #{compId,jdbcType=INTEGER}, 
      #{recrJob,jdbcType=VARCHAR}, #{recrPlace,jdbcType=VARCHAR}, #{recrSalary,jdbcType=VARCHAR}, 
      #{recrDegree,jdbcType=VARCHAR}, #{recrDuty,jdbcType=VARCHAR}, #{recrDemand,jdbcType=VARCHAR}, 
      #{recrDate,jdbcType=TIMESTAMP}, #{recrState,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lyw.domain.TbRecruit" >
    insert into tb_recruit
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recrId != null" >
        recr_id,
      </if>
      <if test="compName != null" >
        comp_name,
      </if>
      <if test="compId != null" >
        comp_id,
      </if>
      <if test="recrJob != null" >
        recr_job,
      </if>
      <if test="recrPlace != null" >
        recr_place,
      </if>
      <if test="recrSalary != null" >
        recr_salary,
      </if>
      <if test="recrDegree != null" >
        recr_degree,
      </if>
      <if test="recrDuty != null" >
        recr_duty,
      </if>
      <if test="recrDemand != null" >
        recr_demand,
      </if>
      <if test="recrDate != null" >
        recr_date,
      </if>
      <if test="recrState != null" >
        recr_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="recrId != null" >
        #{recrId,jdbcType=INTEGER},
      </if>
      <if test="compName != null" >
        #{compName,jdbcType=VARCHAR},
      </if>
      <if test="compId != null" >
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="recrJob != null" >
        #{recrJob,jdbcType=VARCHAR},
      </if>
      <if test="recrPlace != null" >
        #{recrPlace,jdbcType=VARCHAR},
      </if>
      <if test="recrSalary != null" >
        #{recrSalary,jdbcType=VARCHAR},
      </if>
      <if test="recrDegree != null" >
        #{recrDegree,jdbcType=VARCHAR},
      </if>
      <if test="recrDuty != null" >
        #{recrDuty,jdbcType=VARCHAR},
      </if>
      <if test="recrDemand != null" >
        #{recrDemand,jdbcType=VARCHAR},
      </if>
      <if test="recrDate != null" >
        #{recrDate,jdbcType=TIMESTAMP},
      </if>
      <if test="recrState != null" >
        #{recrState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lyw.domain.TbRecruitExample" resultType="java.lang.Integer" >
    select count(*) from tb_recruit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_recruit
    <set >
      <if test="record.recrId != null" >
        recr_id = #{record.recrId,jdbcType=INTEGER},
      </if>
      <if test="record.compName != null" >
        comp_name = #{record.compName,jdbcType=VARCHAR},
      </if>
      <if test="record.compId != null" >
        comp_id = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.recrJob != null" >
        recr_job = #{record.recrJob,jdbcType=VARCHAR},
      </if>
      <if test="record.recrPlace != null" >
        recr_place = #{record.recrPlace,jdbcType=VARCHAR},
      </if>
      <if test="record.recrSalary != null" >
        recr_salary = #{record.recrSalary,jdbcType=VARCHAR},
      </if>
      <if test="record.recrDegree != null" >
        recr_degree = #{record.recrDegree,jdbcType=VARCHAR},
      </if>
      <if test="record.recrDuty != null" >
        recr_duty = #{record.recrDuty,jdbcType=VARCHAR},
      </if>
      <if test="record.recrDemand != null" >
        recr_demand = #{record.recrDemand,jdbcType=VARCHAR},
      </if>
      <if test="record.recrDate != null" >
        recr_date = #{record.recrDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.recrState != null" >
        recr_state = #{record.recrState,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_recruit
    set recr_id = #{record.recrId,jdbcType=INTEGER},
      comp_name = #{record.compName,jdbcType=VARCHAR},
      comp_id = #{record.compId,jdbcType=INTEGER},
      recr_job = #{record.recrJob,jdbcType=VARCHAR},
      recr_place = #{record.recrPlace,jdbcType=VARCHAR},
      recr_salary = #{record.recrSalary,jdbcType=VARCHAR},
      recr_degree = #{record.recrDegree,jdbcType=VARCHAR},
      recr_duty = #{record.recrDuty,jdbcType=VARCHAR},
      recr_demand = #{record.recrDemand,jdbcType=VARCHAR},
      recr_date = #{record.recrDate,jdbcType=TIMESTAMP},
      recr_state = #{record.recrState,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lyw.domain.TbRecruit" >
    update tb_recruit
    <set >
      <if test="compName != null" >
        comp_name = #{compName,jdbcType=VARCHAR},
      </if>
      <if test="compId != null" >
        comp_id = #{compId,jdbcType=INTEGER},
      </if>
      <if test="recrJob != null" >
        recr_job = #{recrJob,jdbcType=VARCHAR},
      </if>
      <if test="recrPlace != null" >
        recr_place = #{recrPlace,jdbcType=VARCHAR},
      </if>
      <if test="recrSalary != null" >
        recr_salary = #{recrSalary,jdbcType=VARCHAR},
      </if>
      <if test="recrDegree != null" >
        recr_degree = #{recrDegree,jdbcType=VARCHAR},
      </if>
      <if test="recrDuty != null" >
        recr_duty = #{recrDuty,jdbcType=VARCHAR},
      </if>
      <if test="recrDemand != null" >
        recr_demand = #{recrDemand,jdbcType=VARCHAR},
      </if>
      <if test="recrDate != null" >
        recr_date = #{recrDate,jdbcType=TIMESTAMP},
      </if>
      <if test="recrState != null" >
        recr_state = #{recrState,jdbcType=INTEGER},
      </if>
    </set>
    where recr_id = #{recrId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lyw.domain.TbRecruit" >
    update tb_recruit
    set comp_name = #{compName,jdbcType=VARCHAR},
      comp_id = #{compId,jdbcType=INTEGER},
      recr_job = #{recrJob,jdbcType=VARCHAR},
      recr_place = #{recrPlace,jdbcType=VARCHAR},
      recr_salary = #{recrSalary,jdbcType=VARCHAR},
      recr_degree = #{recrDegree,jdbcType=VARCHAR},
      recr_duty = #{recrDuty,jdbcType=VARCHAR},
      recr_demand = #{recrDemand,jdbcType=VARCHAR},
      recr_date = #{recrDate,jdbcType=TIMESTAMP},
      recr_state = #{recrState,jdbcType=INTEGER}
    where recr_id = #{recrId,jdbcType=INTEGER}
  </update>
  
  <!-- 获取最近的招聘信息 -->
  <select id="selectByRecruitDate" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_recruit
    order by recr_date desc
    limit 10
  </select>
  
  <!-- 根据关键字搜索职位 -->
  <select id="selectByRecrJob" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_recruit
    where recr_job like CONCAT('%',#{keyword, jdbcType=VARCHAR},'%')
    order by recr_date desc
    limit 10
  </select>
</mapper>